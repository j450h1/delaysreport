usethis::use_description(fields = list(Title = "TTC delays report",
`Authors@R` = 'person("Sharla", "Gelfand", email = "sharla.gelfand@gmail.com", role = c("aut", "cre"))',
Description = "Monthly report on top 5 causes for delay for each TTC line."))
usethis::use_mit_license("Sharla Gelfand")
use_data_raw()
library(usethis)
use_data_raw()
library(dplyr)
library(readxl)
delay_codes <- read_excel("data-raw/Subway & SRT Log Codes.xlsx")
library(janitor)
delay_codes <- read_excel("data-raw/Subway & SRT Log Codes.xlsx") %>%
clean_names()
library(dplyr)
library(readxl)
library(janitor)
delay_codes <- read_excel("data-raw/Subway & SRT Log Codes.xlsx") %>%
clean_names()
delay_codes <- delay_codes  %>%
select(code = sub_rmenu_code, description = code_description_3) %>%
remove_empty("rows") %>%
bind_rows(
ttc_delay_codes  %>%
select(code = srt_rmenu_code, description = code_description_7) %>%
remove_empty("rows")
)
delay_codes <- delay_codes  %>%
select(code = sub_rmenu_code, description = code_description_3) %>%
remove_empty("rows") %>%
bind_rows(
delay_codes  %>%
select(code = srt_rmenu_code, description = code_description_7) %>%
remove_empty("rows")
)
delay_codes
delay_codes %>% filter(startsWith(cde, "MUN"))
delay_codes %>% filter(startsWith(code, "MUN"))
?use_data
delay_codes <- delay_codes %>%
bind_rows(missing_codes)
missing_codes <- tribble(
~code, ~description,
"MUNCA", "No Collector Available - Non E.S.A. Related",
"TRNCA", "No Collector Available",
"PUEO", "Delay Description Unknown"
)
delay_codes <- delay_codes %>%
bind_rows(missing_codes)
usethis::use_data(delay_codes)
usethis::use_data(delay_codes)
devtools::load_all(".")
fs::dir_tree("/Users/sharla/delaysreport")
fs::dir_tree("/Users/sharla/delaysreport")
library(delaysreport)
fs::dir_tree("/Users/sharla/delaysreport")
?use_data
library(delaysreport)
delaysreport::delay_codes
usethis::use_r()
usethis::use_r()
usethis::use_r()
usethis::use_r()
?usethis::use_r
usethis::use_r("setup")
setup <- function(report_month, report_year){
usethis::use_directory(fs::path("reports", report_year, report_month))
}
setup("February", "2019")
fs::dir_tree("/Users/sharla/delaysreport")
fs::dir_tree("/Users/sharla/delaysreport")
devtools::load_all(".")
library(delaysreport)
devtools::load_all(".")
library(delaysreport)
rm(setup)
delaysreport::setup("February", 2019)
?use_template
#' Set up delays report
#'
#' @description Set up delays report, with instructions on how to get the data and helper functions to clean the data and write the report.
#'
#' @param report_month Month of report
#' @param report_year Year of report
#'
#' @export
setup <- function(report_month, report_year){
report_path <- fs::path("reports", report_year, report_month)
usethis::use_directory(report_path)
usethis::use_template(template = "setup.R",
save_as = paste0(report_path, "/setup.R"),
data = list(report_month = report_month,
report_year = report_year),
package = "delaysreport",
open = TRUE)
}
library(delaysreport)
delaysreport::setup("February", 2019)
delaysreport::setup("February", 2019)
devtools::load_all(".")
library(delaysreport)
rm(list=ls())
delaysreport::setup("February", 2019)
fs::dir_tree("/Users/sharla/delaysreport")
usethis::use_package("usethis")
devtools::load_all(".")
library(delaysreport)
usethis::use_template(template = "data_cleaning.R",
save_as = "reports/2019/February/data_cleaning.R",
data = list(report_month = "February",
report_year = 2019),
package = "delaysreport")
library(readxl)
library(dplyr)
library(here)
library(janitor)
library(assertr)
delays <- read_excel(here("reports", 2019, February, "delays_February_2019_raw.xlsx")) %>%
clean_names()
delays <- read_excel(here("reports", "2019", "February", "delays_February_2019_raw.xlsx")) %>%
clean_names()
delays <- read_excel(here("reports", "2019", "February", "delays_February_2019_raw.xlsx")) %>%
clean_names()
delays %>%
assert(in_set("YU", "BD", "SHP", "SRT"), line)
delays %>%
filter(!(line %in% c("YU", "BD", "SHP", "SRT"))) %>%
count(line)
delays <- delays %>%
filter(line %in% c("YU", "BD", "SHP", "SRT"))
delays <- delays %>%
left_join(delaysreport::delay_codes,
by = "code")
delays %>%
assert(not_na, description)
delays %>%
filter(is.na(description)) %>%
count(code)
delay_codes %>% filter(startsWith(code, "MU"))
delay_codes %>% filter(startsWith(code, "MUP"))
delays <- delays %>%
mutate(description = case_when(code == "MUPF" ~ "Delay Description Unknown",
TRUE ~ description))
saveRDS(delays, here("reports", 2019, February, "delays_February_2019_clean.xlsx"))
saveRDS(delays, here("reports", "2019", "February", "delays_February_2019_clean.xlsx"))
usethis::use_r("data_cleaning")
devtools::load_all(".")
library(delaysreport)
usethis::use_rmarkdown_template()
?usethis::use_rmarkdown_template
template_description = "Monthly report on top 5 causes for delay for each TTC line.)
usethis::use_rmarkdown_template(template_name = "delays_report",
template_description = "Monthly report on top 5 causes for delay for each TTC line.")
fs::dir_tree("/Users/sharla/delaysreport")
devtools::load_all(".")
library(delaysreport)
usethis::use_template("delays_report", open = TRUE)
library(delaysreport)
usethis::use_template("delays_report", open = TRUE)
usethis::use_template("delays_report.Rmd", open = TRUE)
usethis::use_template("delays_report.Rmd", open = TRUE, package = "delaysreport")
usethis::use_r("delays_report")
iris
iris %>%
filter(Species == Species)
library(dplyr)
Species <- "virginica"
iris %>%
filter(Species == Species)
iris %>%
filter(Species == Species) %>%
count(Species)
iris %>%
filter(Species == filter_Species) %>%
count(Species)
filter_Species <- "virginica"
iris %>%
filter(Species == filter_Species) %>%
count(Species)
